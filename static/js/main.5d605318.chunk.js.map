{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","App","useState","visibleTodos","setVisibleTodos","setTitle","hasErrorTitle","setHasErrorTitle","userSelect","setUserSelect","hasErrorUserSelect","setHasErrorUserSelect","pattern","createId","arrOfNumbers","Math","max","action","method","onSubmit","event","preventDefault","newTodo","htmlFor","placeholder","type","value","onChange","newTitle","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d605318.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        return (\n          <TodoInfo key={todo.id} todo={todo} />\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([...todos]);\n\n  const [title, setTitle] = useState('');\n  const [hasErrorTitle, setHasErrorTitle] = useState(false);\n\n  const [userSelect, setUserSelect] = useState(0);\n  const [hasErrorUserSelect, setHasErrorUserSelect] = useState(false);\n\n  const pattern = /[^a-zA-Zа-яА-ЯґҐєЄіІїЇ0-9\\s]|[ёЁыЫъЪэЭ]/gu;\n\n  const handlerChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = event.target.value.replace(pattern, '');\n\n    if (newTitle === title) {\n      return;\n    }\n\n    setTitle(newTitle);\n    setHasErrorTitle(false);\n  };\n\n  const createId = () => {\n    const arrOfNumbers = visibleTodos.map(todo => todo.id);\n\n    return Math.max(...arrOfNumbers) + 1;\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserSelect(0);\n\n    setHasErrorTitle(false);\n    setHasErrorUserSelect(false);\n  };\n\n  const handlerSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasErrorTitle(!title);\n    setHasErrorUserSelect(!userSelect);\n\n    if (!title || !userSelect) {\n      return;\n    }\n\n    const newTodo = {\n      id: createId(),\n      title,\n      completed: false,\n      userId: userSelect,\n      user: getUserById(userSelect),\n    };\n\n    setVisibleTodos([\n      ...visibleTodos,\n      newTodo,\n    ]);\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handlerSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title:&nbsp;\n          </label>\n          <input\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handlerChangeTitle}\n          />\n          {hasErrorTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            User:&nbsp;\n          </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={userSelect}\n            onChange={event => {\n              setUserSelect(+event.target.value);\n              setHasErrorUserSelect(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasErrorUserSelect && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}